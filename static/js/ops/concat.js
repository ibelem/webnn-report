(() => {
	if (typeof window === 'undefined') {
		return;
	}
	const spec = {
		inputs: {
			concatInput1: {
				descriptor: { dataType: 'float16', shape: [1, 6] },
				data: [
					-0.3944413363933563, 0.861982524394989, 0.337996244430542,
					-0.990639865398407, 0.576785683631897, 0.32276400923728943
				]
			},
			concatInput2: {
				descriptor: { dataType: 'float16', shape: [3, 6] },
				data: [
					-0.44735023379325867, 0.11028251051902771, -0.5945112705230713,
					-0.402848482131958, -0.9531654119491577, -0.6731740236282349,
					0.49189892411231995, -0.15864109992980957, -0.3418811559677124,
					-0.9158143401145935, -0.7206121683120728, -0.7993468642234802,
					0.6653800010681152, 0.03886038810014725, 0.5182055234909058,
					-0.8742017149925232, -0.4790218770503998, 0.1211843192577362
				]
			}
		},
		build: (builder, { concatInput1, concatInput2 }) =>
			builder.concat([concatInput1, concatInput2], 0),
		expected: {
			descriptor: { dataType: 'float16', shape: [4, 6] },
			data: [
				-0.39453125, 0.86181640625, 0.337890625, -0.99072265625,
				0.57666015625, 0.32275390625, -0.447265625, 0.11029052734375,
				-0.5947265625, -0.40283203125, -0.953125, -0.67333984375,
				0.491943359375, -0.15869140625, -0.341796875, -0.916015625,
				-0.720703125, -0.79931640625, 0.66552734375, 0.038848876953125,
				0.51806640625, -0.8740234375, -0.47900390625, 0.12115478515625
			]
		}
	};
	const register = window.registerOperationTest;
	if (typeof register === 'function') {
		register('concat', spec);
		return;
	}
	const store = window.operationTests = window.operationTests || {};
	store.concat = spec;
})();